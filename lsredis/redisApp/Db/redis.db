record(stringin,"$(P)"){
  field( DTYP,         "Redis Connector")
  field( DESC,         "Manage redis supplied PVs")
  field( SCAN,         "I/O Intr")
  info( redisKeyBase,  "$(S)")
  info( epicsPVBase,   "$(P)")
  info( redisReadHost, "$(RRH)")
  info( redisReadPort, "$(RRP)")
  info( redisReadDb,   "$(RRDB)")
  info( redisWriteHost,"$(RWH)")
  info( redisWritePort,"$(RWP)")
  info( redisWriteDb,  "$(RWDB)")
  info( redisSubHost,  "$(RRH)")
  info( redisSubPort,  "$(RRP)")
  info( redisSubDb,    "$(RRDB)")
  info( pgHost,        "$(pgHost)")
  info( pgPort,        "$(pgPort)")
  info( pgUser,        "$(pgUser)")
  info( pgDb,          "$(pgDb)")
}
record( ao, "$(P):omega:position"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value to Redis")
  field( SCAN,           "Passive")
  field( LINR,           "NO CONVERSION")
  info(  redisKey,       "$(S).omega.position")
  info(  redisConnector, "$(P)")
  info(  setter,         "kvset")
}
record( ai,              "$(P):omega:position_RBV"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value from Redis")
  field( SCAN,           "I/O Intr")
  field( LINR,           "NO CONVERSION")
  info(  redisKey,       "$(S).omega.position")
  info(  redisConnector, "$(P)")
}
record( ao, "$(P):current"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value to Redis")
  field( SCAN,           "Passive")
  field( LINR,           "NO CONVERSION")
  info(  redisKey,       "$(S).current")
  info(  redisConnector, "$(P)")
  info(  setter,         "redis")
}
record( bo, "$(P):backLight:position"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value to Redis")
  field( SCAN,           "Passive")
  info(  redisKey,       "$(S).backLight.position")
  info(  redisConnector, "$(P)")
  info(  setter,         "kvset")
}
record( bi,              "$(P):backLight:position_RBV"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value from Redis")
  field( SCAN,           "I/O Intr")
  info(  redisKey,       "$(S).backLight.position")
  info(  redisConnector, "$(P)")
}
record( bo, "$(P):pss:e_enabled"){
  field( DTYP,           "Redis Value")
  field( DESC,           "Value to Redis")
  field( SCAN,           "Passive")
  info(  redisKey,       "$(S).pss.e_enabled")
  info(  redisConnector, "$(P)")
  info(  setter,         "redis")
}
